<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="./style.css">
</head>
<body>
    <div class="app-main">
        <div class="search-box">
            <input type="text" id="input" class="input" placeholder="Enter the name of city">
        </div>
        <div class="weather-body">
            <div class="location">
                <div class="city" id="city">Munger, IN</div>
                <div class="date" id="date">8 August (Sunday), 2021</div>
            </div>
            <div class="status">
                <div class="temp" id="temp">27&deg;C</div>
                <div class="min-max" id="min-max">18&deg;C (min) / 31&deg;C (max)</div>
                <div class="weather" id="weather">Clouds</div>
            </div>
        </div>
    </div>
</body>
<script src="script.js"></script>
</html> 


style.css 

*{
    margin: 0;
    padding: 0;
}
body{
    background-image: url("./sunny_weather.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    overflow: hidden;
    height: 100vh;
    background-position: top center;
}
.app-main{
    width: 50vh;
    background-color: rgba(186, 213, 236, 0.5);
    margin:120px auto;
    text-align: center;
    padding: 20px;
}
.input{
    height:50px;
    width: 100%;
    margin-bottom: 30px;
    border: none;
    outline: none;
    color: #335822;
    font-size: 1.1rem;
    border-radius: 5px;
    text-align: center;
}

.input:focus{
    background-color:rgba(255,255,255);
}
.weather-body{
    color: #e41657;
    padding: 10px;
    line-height: 40px;
    background-color: rgba(255, 255, 255, 0.7);
    height: 50vh;
}
.location{
    font-weight:bolder;
}
.status{
    padding: 20px;
}
.temp{
    font-size: 3.5rem;
    font-weight:bolder;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-shadow: 1px 4px rgb(167, 165, 165);
    margin: 15px 0px;
}
.min-max,.weather{
    font-size: 1.2rem;
    font-weight: bold;
    font-family:serif;
}

javascript 

const weatherApi={
    key:"4926b71d9cbbea189c1a30867f5731f2",
    baseUrl:"https://api.openweathermap.org/data/2.5/weather",
}
const searchInputBox=document.getElementById('input');
 searchInputBox.addEventListener('keypress', (event) => {
     if(event.keyCode == 13){
         console.log(searchInputBox.value);
         getWeatherReport(searchInputBox.value);
     }
});
function getWeatherReport(city){
    fetch(`${weatherApi.baseUrl}?q=${city}&appid=${weatherApi.key}&units=metric`)
    .then(weather => {
        return weather.json();
    }).then(showWeatherReport);
}
function showWeatherReport(weather){
    console.log(weather);
    let city=document.getElementById('city');
    city.innerText = `${weather.name}, ${weather.sys.country}`;

    let temp=document.getElementById('temp');
    temp.innerHTML=`${Math.round(weather.main.temp)}&deg;C`;

    let x = document.getElementById('min-max');
    x.innerHTML=`${Math.floor(weather.main.temp_min)}&degC (min) / ${Math.ceil(weather.main.temp_max)}&degC (max)`;

    let weatherType=document.getElementById('weather');
    weatherType.innerText=`${weather.weather[0].main}`;

    let Tdate = document.getElementById('date');
    let todayDate=new Date();
    Tdate.innerText=manageDate(todayDate);

    if(weatherType.textContent=='Clear'){
        document.body.style.backgroundImage = "url('./clear_weather.jpg')"
    }
    else if(weatherType.textContent=='Clouds'){
        document.body.style.backgroundImage = "url('./cloudy_weather.jpg')"
    }
    else if(weatherType.textContent=='Rain'){
        document.body.style.backgroundImage = "url('./rainy.jpg')"
    }
    else if(weatherType.textContent=='Haze'){
        document.body.style.backgroundImage = "url('./haze.jpg')"
    }
    else if(weatherType.textContent=='Thunderstorm'){
        document.body.style.backgroundImage = "url('./thunderstorm.jpg')"
    }
}
function manageDate(a){
    let days = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
    let months=["January","February","March","April","May","June","July","August","September","October","November","December"];
    let year=a.getFullYear();
    let month=months[a.getMonth()];
    let day=days[a.getDay()];
    let date=a.getDate();

    return `${date} ${month} (${day}), ${year}`;
}
